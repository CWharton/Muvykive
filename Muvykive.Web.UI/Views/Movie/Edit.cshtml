@model Muvykive.Web.UI.ViewModels.DetailMovieEditView

@{
    ViewBag.Title = "Edit";
}

@if (false)
{
    <script src="../../Scripts/jquery-1.6.4.js" type="text/javascript"></script>   
}

@section scripts {
    @Content.Script("jquery.validate.min.js", Url)
    @Content.Script("jquery.validate.unobtrusive.min.js", Url)
    <script type="text/javascript">
        $(document).ready(function () {
            if ($("#Movie_Id").val() > 0) {
                $("#add_genre").removeAttr("style").click(function () {
                    if ($("#GenreId").val() > 0) {
                        $.ajax({
                            url: '@Url.Action("AddMovieGenre", "MovieAjax")',
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({ movieId: @Model.Movie.Id, genreId: $("#GenreId").val() }),
                            success: function (result) { 
                                if (result.Successful == true) { $("#genre_list").append("<li>" + result.GenreName + "</li>"); } 
                                else { alert('Function: AddMovieGenre (Click) \r\rMessage: Unable to add genre. ' + result.Message); } 
                            },
                            error: function () { alert('Function: AddMovieGenre (Click) \r\rMessage: AJAX Error, unable to complete task.'); }
                        });
                    } else {
                         alert('Please select a genre before trying to add.');
                    }
                    return false;
                });
            }
        });
    </script>
}

@{string type = Model.Movie == null ? "New" : "Edit";}
<h2>@type Movie</h2>
<fieldset class="content ui-corner-all">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Movie.Id)

        <div class="inner-sidebar">
            <div class="postbox">
                <h3><span>Actions</span></h3>
                <div class="inside">
                    <div id="delete-action">
                        @if (Model.Movie != null && Model.Movie.Id == 0)
                        {
                            @Html.ActionLink("Cancel", "Index", "Home")
                        }
                        else
                        {
                            @Html.ActionLink("Cancel", "Details", "Movie", new { id = Model.Movie.Id }, new { })
                        }
                    </div>
                    <div id="save-action">
                        <button type="submit">&nbsp; Save Movie &nbsp;</button>
                    </div>
                    <div class="clear"></div>
                </div>
            </div>

            <div class="postbox">
                <h3><span>Genres</span></h3>
                <div class="inside">
                    @Html.DropDownList("GenreId", Model.Genres, "- Select Genre -")
                    <button id="add_genre" style="display: none;">Add</button>
                </div>
                <div>
                    <ul id="genre_list">
                        @if (Model.Movie != null && Model.Movie.Id > 0)
                        {
                            foreach (var genre in Model.Movie.Genres)
                            {
                                <li>@genre.Name</li>
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div id="form-body">
            <div id="form-body-content">
                <div>
                    <span class="editor-label">
                        @Html.LabelFor(model => model.Movie.Name):
                    </span>
                    <span class="editor-field">
                        @Html.TextBoxFor(model => model.Movie.Name, new { @style = "width:200px;" })
                        @Html.ValidationMessageFor(model => model.Movie.Name)
                    </span>
                </div>

                <div>
                    <span class="editor-label">
                        @Html.LabelFor(model => model.Movie.Released):
                    </span>
                    <span class="editor-field">
                        @Html.EditorFor(model => model.Movie.Released)
                        @Html.ValidationMessageFor(model => model.Movie.Released)
                    </span>
                </div>

                <div>
                    <span class="editor-label">
                        Certification:
                    </span>
                    <span class="editor-field">
                        @Html.DropDownList("CertificationId", Model.Certifications, "--")
                    </span>
                </div>

                <div>
                    <span class="editor-label">
                        @Html.LabelFor(model => model.Movie.RunTime):
                    </span>
                    <span class="editor-field">
                        @Html.TextBoxFor(model => model.Movie.RunTime, new { @style = "width:50px;" }) mins.
                        @Html.ValidationMessageFor(model => model.Movie.RunTime)
                    </span>
                </div>
            </div>
        </div>
    }

</fieldset>    
